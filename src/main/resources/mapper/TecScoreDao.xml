<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="wxx.java.appraise.dao.TecScoreDao">
    <insert id="appraise" parameterType="list">
        insert into tec_score(grade_id , tec_id , designer , personal , coordinate , `month` , `year` ,`date`)
        value
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.gradeId} , #{item.tecId} , #{item.designer} ,#{item.personal} ,#{item.coordinate} ,#{month} ,#{year}, #{item.date})
        </foreach>
        ON DUPLICATE KEY UPDATE
        designer = values(designer),
        personal = values(personal),
        coordinate = values(coordinate),
        `month` = values(`month`),
        `year` = values(`year`),
        `date` = values(`date`)
    </insert>
    <update id="backups">
        insert into tec_score_backups(grade_id , tec_id , designer , personal , coordinate , `month` , `year` , `date`)
        select *
        from tec_score
    </update>
    <delete id="delete">
        delete
        from tec_score
    </delete>

    <select id="queryByGradeId" resultType="java.util.Map">
        select gt.id as gtId ,
        CASE gt.state when 0 then "false"
        when  1 then "true" end as state ,
        d.name as department, t.name as technology,
        s.designer , s.personal , s.coordinate
        from
        `user` u,
        technology t,
        department d,
        grade_tec gt  left join
        tec_score s on s.gt_id = gt.id
        where gt.grade_id = #{id}
        and gt.tec_id = t.id
        and u.id = gt.grade_id
        and t.did = d.id
    </select>
  <select id="queryByScoreId" resultType="java.util.Map">
    select `month`, AVG ( designer  ) AS designer , AVG ( personal ) AS personal,
    AVG (coordinate ) AS coordinate,
     AVG (( designer + personal + coordinate )/ 3) AS score
    from tec_score s,
    `user` u
    where u.id = #{id}
    and u.tid = s.tec_id
    group by `month`
  </select>
  <select id="queryByScoreIdPast" resultType="java.util.Map">
    select `month`, AVG ( designer  ) AS designer , AVG ( personal ) AS personal,
    AVG (coordinate ) AS coordinate,
     AVG (( designer + personal + coordinate )/ 3) AS score
    `user` u
    where u.id = #{id}
    and u.tid = s.tec_id
    group by `month`
    limit 2
  </select>
    <select id="queryScore" resultType="java.util.Map">
        SELECT distinct  m.department, m.technology, m.score
        FROM(
        SELECT d.NAME AS department, t.NAME AS technology,
        AVG(( s.designer + s.personal + s.coordinate )/ 3) AS score ,s.tec_id
        FROM
        tec_score s,
        department d,
        technology t
        WHERE
        t.did = d.id
        AND s.tec_id = t.id
        GROUP BY s.tec_id) as m,
        `user` u
        <where>
            <choose>
                <when test="pid == 1">
                </when>
                <otherwise>
                u.id = #{id}
                and m.tec_id = u.tid
                </otherwise>
            </choose>
        </where>
    </select>
  <select id="queryScorePast" resultType="java.util.Map">
    SELECT distinct  m.department, m.technology, m.score
    FROM(
    SELECT d.NAME AS department, t.NAME AS technology,
    AVG(( s.designer + s.personal + s.coordinate )/ 3) AS score ,s.tec_id
    FROM
    tec_score_backups s,
    department d,
    technology t
    WHERE
    t.did = d.id
    AND s.tec_id = t.id
    AND s.month = #{thisMonth}
    AND S.year = #{thisYear}
    GROUP BY s.tec_id) as m,
    `user` u
    <where>
      <choose>
        <when test="pid == 1">
        </when>
        <otherwise>
          u.id = #{id}
          and m.tec_id = u.tid
        </otherwise>
      </choose>
    </where>
  </select>
    <select id="query" resultType="java.util.Map">
        select u.name , d.name as department , t.name as technology ,
        s.designer ,  s.personal , s.coordinate
        from tec_score s,
        `user` u,
        department d,
        technology t
        where
        u.id = s.grade_id
        and t.did = d.id
        and s.tec_id = t.id
      <if test="dIds != null and dIds != ''">
        and d.id in
        <foreach collection="dIds" item="item" separator="," close=")" open="(">
          #{item}
        </foreach>
      </if>
      <if test="tIds != null and tIds != ''">
        and t.id in
        <foreach collection="tIds" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      </if>
      <if test="selectName != null and selectName != ''">
        order by ${selectName}
      </if>
      <if test="selectType == 1">
        desc
      </if>
    </select>
  <select id="queryPast" resultType="java.util.Map">
    select u.name , d.name as department , t.name as technology ,
    s.designer ,  s.personal , s.coordinate
    from tec_score_backups s,
    `user` u,
    department d,
    technology t
    where
    u.id = s.grade_id
    and t.did = d.id
    and s.tec_id = t.id
    AND s.month = #{thisMonth}
    AND S.year = #{thisYear}
    <if test="dIds != null and dIds != ''">
      and d.id in
      <foreach collection="dIds" item="item" separator="," close=")" open="(">
        #{item}
      </foreach>
    </if>
    <if test="tIds != null and tIds != ''">
      and t.id in
      <foreach collection="tIds" item="item" separator="," open="(" close=")">
        #{item}
      </foreach>
    </if>
    <if test="selectName != null and selectName != ''">
      order by ${selectName}
    </if>
    <if test="selectType == 1">
      desc
    </if>
  </select>
    <select id="excel" resultType="wxx.java.appraise.entity.TechnologyExcel">
        SELECT distinct  m.department, m.technology, m.score
        FROM(
        SELECT d.NAME AS department, t.NAME AS technology,
        AVG(( designer + personal + coordinate )/ 3) AS score ,s.tec_id
        FROM
        tec_score s,
        department d,
        technology t
        WHERE
        t.did = d.id
        AND s.tec_id = t.id
        GROUP BY s.tec_id) as m
    </select>
  <select id="excel1" resultType="wxx.java.appraise.entity.TechnologyExcel">
        SELECT distinct  m.department, m.technology, m.score
        FROM(
        SELECT d.NAME AS department, t.NAME AS technology,
        AVG(( designer + personal + coordinate )/ 3) AS score ,s.tec_id
        FROM
        tec_score_backups s,
        department d,
        technology t
        WHERE
        t.did = d.id
        AND s.tec_id = t.id
        AND s.month = #{thisMonth}
        AND S.year = #{thisYear}
        GROUP BY s.tec_id) as m
  </select>

  <select id="detail" resultType="java.lang.String">
    SELECT
      CONCAT_WS( ',', designer, personal, coordinate ) ,u.username
      FROM
        `user` u
        LEFT JOIN tec_score s ON u.id = s.grade_id
        AND s.tec_id = #{id}
    WHERE
      u.grade = 1
    ORDER BY u.username
  </select>
  <select id="detailPast" resultType="java.lang.String">
    SELECT
      CONCAT_WS( ',', designer, personal, coordinate ) ,u.username
      FROM
        `user` u
        LEFT JOIN tec_score_backups s ON u.id = s.grade_id
        AND s.tec_id = #{tid}
        AND s.month = #{user.thisMonth}
        AND S.year = #{user.thisYear}
    WHERE
      u.grade = 1
    ORDER BY u.username
  </select>
  <select id="part" resultType="wxx.java.appraise.entity.TecPartExcel">
    select u.name as grade ,ts.personal,ts.designer,ts.coordinate ,
    d.name as dep , t.name as tec
    from
    `user` u,
    tec_score ts,
    department d,
    technology t
    where
    u.id = ts.grade_id
    and t.id = ts.tec_id
    and d.id = t.did
    <if test="users != null and users != ''">
      and u.id in
      <foreach collection="users" item="item" separator="," open="(" close=")">
        #{item}
      </foreach>
    </if>
  </select>
  <select id="partPast" resultType="wxx.java.appraise.entity.TecPartExcel">
    select u.name as grade ,ts.personal,ts.designer,ts.coordinate ,
    d.name as dep , t.name as tec
    from
    `user` u,
    tec_score_backups ts,
    department d,
    technology t
    where
    u.id = ts.grade_id
    and t.id = ts.tec_id
    and d.id = t.did
    AND ts.month = #{thisMonth}
    AND ts.year = #{thisYear}
    <if test="users != null and users != ''">
      and u.id in
      <foreach collection="users" item="item" separator="," open="(" close=")">
        #{item}
      </foreach>
    </if>
  </select>


</mapper>
